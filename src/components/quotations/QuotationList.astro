---
import QuotattionsTable from "../../components/Table.astro";
interface Props {
	quotations: any[];
}

const { quotations } = Astro.props;
---

<div class="relative overflow-x-auto">
	<table
		id="default-table"
		class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
	>
		<thead
			class="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400"
		>
			<tr class="bg-primary-500 text-white">
				<th scope="col" class="p-4">
					<div class="flex items-center">
						<input
							id="checkbox-all"
							type="checkbox"
							class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
						/>
						<label for="checkbox-all" class="sr-only"
							>checkbox</label
						>
					</div>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Cotizacion
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Cotizante
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Ciente
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Transportista
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Comprada
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Ingresada
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Procesada
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col">
					<span
						class="px-3 py-3 flex items-center text-center font-medium text-gray-800 dark:text-gray-100 uppercase tracking-wider"
					>
						Tiempo
						<svg
							class="w-4 h-4 ms-1"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke="currentColor"
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="m8 15 4 4 4-4m0-6-4-4-4 4"></path>
						</svg>
					</span>
				</th>
				<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
					<span class="sr-only">Acciones</span>
				</th>
			</tr>
		</thead>
		<tbody class="divide-y divide-gray-200 bg-gray-300">
			{
				quotations.map((item) => (
					<tr>
						<td class="w-4 px-4 py-3">
							<div class="flex items-center">
								<input
									id={`checkbox-table-${item.id}`}
									type="checkbox"
									onclick="event.stopPropagation()"
									class="w-4 h-4 bg-gray-100 border-gray-300 rounded text-primary-600 focus:ring-primary-500 dark:focus:ring-primary-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
								/>
								<label
									for={`checkbox-table-${item.id}`}
									class="sr-only"
								>
									checkbox
								</label>
							</div>
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							<div class="p-1">
								<h3 class="font-semibold">
									<a
										href={`/products/${item.product.id}/details`}
										class="
									text-primary-600 
									dark:text-primary-300 
									text-balance"
									>
										{item.product.name}
									</a>
								</h3>
								<div class="flex flex-col justify-center mt-2">
									<a href={`/quotations/${item.id}/details`}>
										<span class="text-balance">
											Número: {item.quotationNumber}
										</span>
									</a>
									<span class="text-balance">
										Tienda: {item.store.name}
									</span>
									<span class="text-primary-300 dark:text-primary-800">
										País: {item.country.name}
									</span>
								</div>
							</div>
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{item.quoter.name}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{item.client.name}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{item.currier.name}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{new Date(item.purchaseDate).toLocaleDateString()}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{new Date(item.ingressDate).toLocaleDateString()}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							{new Date(item.processedDate).toLocaleDateString()}
						</td>
						<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-900 dark:text-gray-100">
							<p>
								{new Date(
									item.expectedArrivalDate,
								).toLocaleDateString()}
							</p>
							<p>
								{new Date(
									item.arrivalDate,
								).toLocaleDateString()}
							</p>
							{item.expectedArrivalDate &&
								item.arrivalDate &&
								item.expectedArrivalDate > item.arrivalDate &&
								`En ${new Date(
									item.expectedArrivalDate,
								)} se espera que llegue el ${new Date(
									item.arrivalDate,
								)}`}
						</td>
						<td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
							<div
								class="inline-flex rounded-md shadow-sm"
								role="group"
							>
								<a
									href={`/quotations/${item.id}/edit`}
									class="
								px-1 
								py-1
								mr-1
								text-sm 
								font-medium 
								rounded-s-lg 
								focus:z-10 
								focus:ring-2 
								text-warning-500 dark:text-warning-600 
								hover:bg-warning-800 
								hover:text-warning-400
								focus:ring-warning-600 
								focus:text-warning-600"
								>
									<span class="sr-only">Edit</span>
									<svg
										xmlns="http://www.w3.org/2000/svg"
										class="w-6 h-6"
										aria-hidden="true"
										fill="currentColor"
										viewBox="0 -960 960 960"
									>
										<path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h357l-80 80H200v560h560v-278l80-80v358q0 33-23.5 56.5T760-120H200Zm280-360ZM360-360v-170l367-367q12-12 27-18t30-6q16 0 30.5 6t26.5 18l56 57q11 12 17 26.5t6 29.5q0 15-5.5 29.5T897-728L530-360H360Zm481-424-56-56 56 56ZM440-440h56l232-232-28-28-29-28-231 231v57Zm260-260-29-28 29 28 28 28-28-28Z" />
									</svg>
								</a>
								<a
									href={`/quotations/${item.id}/details`}
									class="
									px-1 
									py-1
									mr-1 
									text-sm 
									font-medium 
									rounded-lg 
									focus:z-10 
									focus:ring-2 
									text-green-500 
									dark:text-green-600
									hover:bg-success-800 
									hover:text-green-400 
									focus:ring-green-600
									focus:text-green-600"
								>
									<span class="sr-only">Details</span>
									<svg
										class="w-6 h-6"
										aria-hidden="true"
										xmlns="http://www.w3.org/2000/svg"
										width="24"
										height="24"
										fill="none"
										viewBox="0 0 24 24"
									>
										<path
											stroke="currentColor"
											stroke-width="2"
											d="M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z"
										/>
										<path
											stroke="currentColor"
											stroke-width="2"
											d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
										/>
									</svg>
								</a>
								<button
									data-id={item.id}
									type="button"
									class="
									px-1 
									py-1
									text-sm 
									font-medium 
									rounded-e-lg 
									focus:z-10 
									focus:ring-2 
									text-danger-400
									hover:bg-danger-800 
									focus:ring-orange-600 
									focus:text-danger-300
									delete-btn"
								>
									<span class="sr-only">Delete</span>
									<svg
										class="w-6 h-6"
										aria-hidden="true"
										xmlns="http://www.w3.org/2000/svg"
										fill="none"
										viewBox="0 0 24 24"
									>
										<path
											stroke="currentColor"
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
										/>
									</svg>
								</button>
							</div>
						</td>
					</tr>
				))
			}
		</tbody>
	</table>
</div>
<script>
	import { DataTable } from "simple-datatables";

	const dataTable = new DataTable("#default-table", {
		searchable: true,
		sortable: true,
		perPage: 10,
		perPageSelect: [10, 15, 20, 50, 100],
		scrollY: "45vh",
	});

	const deleteButtons = document.querySelectorAll(".delete-btn");
	deleteButtons.forEach((button) => {
		button.addEventListener("click", async () => {
			if (confirm("Are you sure you want to delete this element?")) {
				const id = button.getAttribute("data-id");
				try {
					const response = await fetch(`/api/quotations/${id}`, {
						method: "DELETE",
					});
					if (response.ok) {
						window.location.reload();
					}
				} catch (error) {
					console.error("Error:", error);
				}
			}
		});
	});
</script>
