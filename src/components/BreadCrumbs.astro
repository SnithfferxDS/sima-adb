---
import { url } from "../lib/utils/functions";
interface Route {
	lable: string;
	path: string;
}

interface Props {
	routes: Route[];
	currentRoute: string;
	headerTitle: string;
}

const { routes, currentRoute, headerTitle } = Astro.props;
---

<div class="mb-4">
	<nav class="flex mb-5" aria-label="Breadcrumb">
		<ol
			class="inline-flex items-center space-x-1 text-sm font-medium md:space-x-2"
		>
			<li class="inline-flex items-center">
				<a
					href={url("/")}
					class="inline-flex items-center text-gray-700 hover:text-primary-700 dark:text-gray-400 dark:hover:text-gray-300"
				>
					<svg
						class="w-5 h-5 mr-2.5"
						fill="currentColor"
						viewBox="0 0 20 20"
						xmlns="http://www.w3.org/2000/svg"
						><path
							d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
						></path></svg
					>
					Inicio
				</a>
			</li>
			<li class="inline-flex items-center">
				<svg
					class="w-6 h-6 text-gray-600 dark:text-gray-400"
					fill="currentColor"
					viewBox="0 0 20 20"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						fill-rule="evenodd"
						d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
						clip-rule="evenodd"></path>
				</svg>
				<a
					href={url("/dashboard")}
					class="inline-flex items-center text-gray-700 hover:text-primary-700 dark:text-gray-400 dark:hover:text-gray-300"
				>
					<svg
						class="w-5 h-5 mr-2.5"
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						width="24"
						height="24"
						fill="none"
						viewBox="0 0 24 24"
					>
						<path
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M4 4v15a1 1 0 0 0 1 1h15M8 16l2.5-5.5 3 3L17.273 7 20 9.667"
						></path>
					</svg>Dashboard
				</a>
			</li>

			{
				routes.map((route, index) =>
					// if is last item
					route.path === currentRoute ? (
						<li id={`breadcrumb-item-${index}`}>
							<div class="flex items-center">
								<svg
									class="w-6 h-6 text-gray-600 dark:text-gray-400"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
										clip-rule="evenodd"
									/>
								</svg>
								<span
									class="ml-1 text-primary-700 md:ml-2 dark:text-primary-500"
									aria-current="page"
								>
									{headerTitle}
								</span>
							</div>
						</li>
					) : (
						<li id={`breadcrumb-item-${index}`}>
							<div class="flex items-center">
								<svg
									class="w-6 h-6 text-gray-600 dark:text-gray-400"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
										clip-rule="evenodd"
									/>
								</svg>
								<a
									href={url(route.path)}
									class="ml-1 text-gray-700 hover:text-primary-700 md:ml-2 dark:text-gray-400 dark:hover:text-gray-300"
								>
									{route.lable}
								</a>
							</div>
						</li>
					),
				)
			}
		</ol>
	</nav>
	<h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white">
		{headerTitle}
	</h1>
</div>
