---
import Layout from "../../layouts/app.layout.astro";
import FileUpload from "../../components/FileUpload.astro";
---

<Layout title="Create Brand">
	<div class="p-6 mx-auto">
		<h1 class="text-2xl font-bold mb-6">Crear Marca</h1>

		<form
			id="createForm"
			class="max-w-lg bg-gray-50/50 dark:bg-gray-700/50 rounded-lg shadow p-6"
		>
			<div class="mb-4">
				<label
					for="name"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Nombre</label
				>
				<input
					type="text"
					name="name"
					id="name"
					required
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="Brand Name"
				/>
			</div>

			<div class="mb-4">
				<label
					for="description"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Descripci√≥n</label
				>
				<textarea
					id="description"
					name="description"
					rows="3"
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="Brand Description"></textarea>
			</div>

			<FileUpload id="logo" label="Logo" accept="image/*" />

			<div class="mb-4">
				<label class="relative inline-flex items-center cursor-pointer">
					<input
						type="checkbox"
						id="active"
						name="active"
						class="sr-only peer"
						checked
					/>
					<div
						class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:peer-focus:ring-primary-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary-600"
					>
					</div>
					<span
						class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300"
						>Activa</span
					>
				</label>
			</div>

			<div class="flex justify-end space-x-4">
				<a
					href="/brands"
					class="px-4 py-2 text-gray-200 bg-danger-400 rounded-md hover:bg-danger-500"
				>
					Cancel
				</a>
				<button
					type="submit"
					class="px-4 py-2 text-white bg-primary-500 rounded-md hover:bg-primary-600"
				>
					Create
				</button>
			</div>
		</form>
	</div>
</Layout>

<script>
	import { showSuccess, showError } from "../../lib/utils/notifications";
	import { uploadFile } from "../../lib/utils/upload";

	const form = document.getElementById("createForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);
		const logoFile = (document.getElementById("logo") as HTMLInputElement)
			.files?.[0];

		try {
			let logoUrl = null;
			if (logoFile) {
				logoUrl = await uploadFile(logoFile);
			}

			const data = {
				name: formData.get("name"),
				description: formData.get("description"),
				logo: logoUrl,
				active: formData.get("active") === "on",
			};

			const response = await fetch("/api/brands", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify(data),
			});

			if (response.ok) {
				showSuccess("Brand created successfully");
				window.location.href = "/brands";
			} else {
				const error = await response.json();
				showError(error.message || "Failed to create brand");
			}
		} catch (error) {
			console.error("Error:", error);
			showError("An unexpected error occurred");
		}
	});
</script>
