---
import Layout from "../../../../../layouts/app.layout.astro";
import BreadCrumbs from "../../../../../components/BreadCrumbs.astro";
import { db, eq, sql, SidebarMenu } from "astro:db";
import { showError, showSuccess } from "../../../../../lib/utils/notifications";

const { id } = Astro.params;
const sidebarMenu = await db
	.select()
	.from(SidebarMenu)
	.where(eq(SidebarMenu.id, Number(id)));
const menuItems = await db
	.select()
	.from(SidebarMenu)
	.where(
		sql`${SidebarMenu.parent_id} IS NULL OR ${SidebarMenu.parent_id} = 0`,
	)
	.orderBy(SidebarMenu.name);

if (!sidebarMenu) {
	showError("El elemento no existe");
	return;
}

const breadcrumbs = [
	{
		lable: "Admin",
		path: "/admin",
	},
	{
		lable: "menu",
		path: "/admin/menu",
	},
	{
		lable: "Sidebar",
		path: "/admin/menu/sidebar",
	},
	{
		lable: "Edit",
		path: "/admin/menu/sidebar/edit",
	},
];
---

<Layout title={`Editar | Sidebar | Menu ${sidebarMenu[0].name} | Sidebar`}>
	<div
		class="shadow-md rounded-lg overflow-hidden transition-shadow hover:shadow-lg"
	>
		<div
			class="p-4 block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5"
		>
			<div class="w-full mb-1">
				<BreadCrumbs
					routes={breadcrumbs}
					currentRoute={Astro.url.pathname}
					headerTitle={`Editar Menu ${sidebarMenu[0].name} | Sidebar`}
				/>
				<div class="items-center justify-between flex">
					<div class="flex items-center mb-4 sm:mb-0"></div>
				</div>
			</div>
		</div>
	</div>
	<div class="flex flex-col">
		<div class="overflow-x-auto">
			<div class="inline-block min-w-full align-middle">
				<form
					action="POST"
					id="createForm"
					class="max-w-lg bg-gray-50/50 dark:bg-gray-700/50 rounded-lg shadow p-6"
				>
					<input type="hidden" name="sidebar_menu_id" value={id} />
					<div class="space-y-4">
						<div>
							<label
								for="sidebar_item_name"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Name</label
							>
							<input
								type="text"
								name="sidebar_item_name"
								id="sidebar_item_name"
								class="border
								text-sm
								rounded-lg
								block
								w-full p-2.5
								bg-gray-50
								border-gray-300
								text-gray-900
								focus:ring-primary-600
								focus:border-primary-600
								dark:bg-gray-700
								dark:border-gray-600
								dark:placeholder-gray-400
								dark:text-white"
								placeholder="Digite el nombre del elemento"
								value={sidebarMenu[0].name}
								required=""
							/>
						</div>

						<div>
							<label
								for="sidebar_item_url"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Link</label
							>
							<input
								type="text"
								name="sidebar_item_url"
								id="sidebar_item_url"
								class="border
								text-sm
								rounded-lg
								block
								w-full p-2.5
								bg-gray-50
								border-gray-300
								text-gray-900
								focus:ring-primary-600
								focus:border-primary-600
								dark:bg-gray-700
								dark:border-gray-600
								dark:placeholder-gray-400
								dark:text-white"
								value={sidebarMenu[0].url}
								placeholder="Digite el nombre del elemento"
							/>
						</div>

						<div>
							<label
								for="sidebar_item_icon"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Icono</label
							>
							<input
								type="text"
								name="sidebar_item_icon"
								id="sidebar_item_icon"
								class="border
								text-sm
								rounded-lg
								block
								w-full p-2.5
								bg-gray-50
								border-gray-300
								text-gray-900
								focus:ring-primary-600
								focus:border-primary-600
								dark:bg-gray-700
								dark:border-gray-600
								dark:placeholder-gray-400
								dark:text-white"
								value={sidebarMenu[0].icon}
								placeholder="Digite el nombre del elemento"
							/>
						</div>

						<div>
							<label
								for="sidebar_item_parent_id"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Menu Padre</label
							>
							<select
								id="sidebar_item_parent_id"
								name="sidebar_item_parent_id"
								class="border
								text-sm
								rounded-lg
								block
								w-full p-2.5
								bg-gray-50
								border-gray-300
								text-gray-900
								focus:ring-primary-600
								focus:border-primary-600
								dark:bg-gray-700
								dark:border-gray-600
								dark:placeholder-gray-400
								dark:text-white"
							>
								<option value="">None (Top Level)</option>
								{
									menuItems.map((item) => (
										<option
											value={item.id}
											selected={
												item.id ===
												sidebarMenu[0].parent_id
											}
										>
											{item.name}
										</option>
									))
								}
							</select>
						</div>

						<div>
							<label
								for="sidebar_item_position"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Position</label
							>
							<input
								type="number"
								id="sidebar_item_position"
								name="sidebar_item_position"
								class="border
								text-sm
								rounded-lg
								block
								w-full p-2.5
								bg-gray-50
								border-gray-300
								text-gray-900
								focus:ring-primary-600
								focus:border-primary-600
								dark:bg-gray-700
								dark:border-gray-600
								dark:placeholder-gray-400
								dark:text-white"
								value={sidebarMenu[0].position}
							/>
						</div>

						<div class="flex justify-end space-x-4">
							<a
								href="/categories"
								class="px-4 py-2 focus:ring-4 focus:outline-none font-medium rounded-lg text-sm text-center
								text-gray-100 bg-danger-400 hover:bg-danger-500"
							>
								Cancel
							</a>
							<button
								type="submit"
								class="px-4 py-2 focus:ring-4 focus:outline-none font-medium rounded-lg text-sm text-center
								text-gray-100 bg-primary-600 hover:bg-primary-700 focus:ring-primary-700"
							>
								Guardar
							</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</Layout>
<script>
	import {
		showSuccess,
		showError,
	} from "../../../../../lib/utils/notifications";
	import { validateSidebarMenu } from "../../../../../lib/utils/validation";

	const form = document.getElementById("createForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);
		const data = {
			id: Number(formData.get("sidebar_menu_id") as string),
			name: formData.get("sidebar_item_name") as string,
			url: formData.get("sidebar_item_url") as string,
			icon: formData.get("sidebar_item_icon") as string,
			parent_id: Number(formData.get("sidebar_item_parent_id") as string),
			position: Number(formData.get("sidebar_item_position") as string),
		};
		const validation = validateSidebarMenu(data);
		if (validation.errors) {
			showError(Object.values(validation.errors).flat().join("\n"));
			return;
		}

		try {
			const response = await fetch("/api/admin/sidebar", {
				method: "PUT",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify(data),
			});

			if (response.ok) {
				showSuccess("Product Type created successfully");
				window.location.href = "/admin/menu/sidebar";
			} else {
				const error = await response.json();
				showError(error.message || "Failed to create product type");
			}
		} catch (error) {
			console.error("Error:", error);
			showError("An unexpected error occurred");
		}
	});
</script>
