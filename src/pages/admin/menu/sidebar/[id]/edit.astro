---
import Layout from "../../../../../layouts/app.layout.astro";
import BreadCrumbs from "../../../../../components/BreadCrumbs.astro";
import { db, eq, SidebarMenu } from "astro:db";
import { showError, showSuccess } from "../../../../../lib/utils/notifications";
import { ne } from "astro:db";

const { id } = Astro.params;
const sidebarMenu = await db
	.select()
	.from(SidebarMenu)
	.where(eq(SidebarMenu.id, id));
const menuItems = await db
	.select()
	.from(SidebarMenu)
	.where(ne(SidebarMenu.parent_id, id))
	.orderBy(SidebarMenu.name);

if (!sidebarMenu) {
	showError("El elemento no existe");
	return;
}

const breadcrumbs = [
	{
		lable: "Admin",
		path: "/admin",
	},
	{
		lable: "menu",
		path: "/admin/menu",
	},
	{
		lable: "Sidebar",
		path: "/admin/menu/sidebar",
	},
	{
		lable: "Edit",
		path: "/admin/menu/sidebar/edit",
	},
];
---

<Layout title={`Editar | Sidebar | Menu ${sidebarMenu[0].name} | Sidebar`}>
	<div
		class="shadow-md rounded-lg overflow-hidden transition-shadow hover:shadow-lg"
	>
		<div
			class="p-4 block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5"
		>
			<div class="w-full mb-1">
				<BreadCrumbs
					routes={breadcrumbs}
					currentRoute={Astro.url.pathname}
					headerTitle={`Editar Menu ${sidebarMenu[0].name} | Sidebar`}
				/>
				<div class="items-center justify-between flex">
					<div class="flex items-center mb-4 sm:mb-0"></div>
				</div>
			</div>
		</div>
	</div>
	<div class="flex flex-col">
		<div class="overflow-x-auto">
			<div class="inline-block min-w-full align-middle">
				<form action="POST" id="createForm">
					<input type="hidden" name="sidebar_menu_id" value={id} />
					<div class="space-y-4">
						<div>
							<label
								for="sidebar_item_name"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Name</label
							>
							<input
								type="text"
								name="sidebar_item_name"
								id="sidebar_item_name"
								class="border
                            text-sm
                            rounded-lg
                            block
                            w-full p-2.5
                            bg-gray-50
                            border-gray-300
                            text-gray-900
                            focus:ring-primary-600
                            focus:border-primary-600
                            dark:bg-gray-700
                            dark:border-gray-600
                            dark:placeholder-gray-400
                            dark:text-white"
								placeholder="Digite el nombre del elemento"
								required=""
							/>
						</div>

						<div>
							<label
								for="sidebar_item_url"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Link</label
							>
							<input
								type="text"
								name="sidebar_item_url"
								id="sidebar_item_url"
								class="border
                            text-sm
                            rounded-lg
                            block
                            w-full p-2.5
                            bg-gray-50
                            border-gray-300
                            text-gray-900
                            focus:ring-primary-600
                            focus:border-primary-600
                            dark:bg-gray-700
                            dark:border-gray-600
                            dark:placeholder-gray-400
                            dark:text-white"
								placeholder="Digite el nombre del elemento"
							/>
						</div>

						<div>
							<label
								for="sidebar_item_icon"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Icono</label
							>
							<input
								type="text"
								name="sidebar_item_icon"
								id="sidebar_item_icon"
								class="border
                            text-sm
                            rounded-lg
                            block
                            w-full p-2.5
                            bg-gray-50
                            border-gray-300
                            text-gray-900
                            focus:ring-primary-600
                            focus:border-primary-600
                            dark:bg-gray-700
                            dark:border-gray-600
                            dark:placeholder-gray-400
                            dark:text-white"
								placeholder="Digite el nombre del elemento"
							/>
						</div>

						<div>
							<label
								for="sidebar_item_parent_id"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Menu Padre</label
							>
							<select
								id="sidebar_item_parent_id"
								name="sidebar_item_parent_id"
								class="border
                            text-sm
                            rounded-lg
                            block
                            w-full p-2.5
                            bg-gray-50
                            border-gray-300
                            text-gray-900
                            focus:ring-primary-600
                            focus:border-primary-600
                            dark:bg-gray-700
                            dark:border-gray-600
                            dark:placeholder-gray-400
                            dark:text-white"
							>
								<option value="">None (Top Level)</option>
								{
									menuItems.map((item) => (
										<option value={item.id}>
											{item.name}
										</option>
									))
								}
							</select>
						</div>

						<div>
							<label
								for="sidebar_item_position"
								class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
								>Position</label
							>
							<input
								type="number"
								id="sidebar_item_position"
								name="sidebar_item_position"
								value="0"
								class="border
                            text-sm
                            rounded-lg
                            block
                            w-full p-2.5
                            bg-gray-50
                            border-gray-300
                            text-gray-900
                            focus:ring-primary-600
                            focus:border-primary-600
                            dark:bg-gray-700
                            dark:border-gray-600
                            dark:placeholder-gray-400
                            dark:text-white"
							/>
						</div>

						<div
							class="bottom-0 left-0 flex justify-center w-full pb-4 space-x-4 md:px-4 md:absolute"
						>
							<button
								type="submit"
								class="text-white w-full justify-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
							>
								Agregar
							</button>
							<button
								type="button"
								class="text-gray-900 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 border border-gray-200 font-medium inline-flex items-center rounded-lg text-sm px-5 py-2.5 text-center dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
								data-modal-target="delete-product-modal"
								data-modal-toggle="delete-product-modal"
							>
								<svg
									class="w-4 h-4 mr-2"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
										clip-rule="evenodd"></path>
								</svg>
								Delete
							</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</Layout>
<script>
	import {
		showSuccess,
		showError,
	} from "../../../../../lib/utils/notifications";
	import { validateSidebarMenu } from "../../../../../lib/utils/validation";

	const form = document.getElementById("createForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);
		const data = {
			name: formData.get("sidebar_item_name") as string,
			url: formData.get("sidebar_item_url") as string,
			icon: formData.get("sidebar_item_icon") as string,
			parent_id: formData.get("sidebar_item_parent_id") as string,
			position: formData.get("sidebar_item_position") as string,
		};
		const validation = validateSidebarMenu(data);
		if (validation.errors) {
			showError(Object.values(validation.errors).flat().join("\n"));
			return;
		}

		try {
			const response = await fetch("/api/admin/sidebar", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify(data),
			});

			if (response.ok) {
				showSuccess("Product Type created successfully");
				window.location.href = "/admin/menu/sidebar";
			} else {
				const error = await response.json();
				showError(error.message || "Failed to create product type");
			}
		} catch (error) {
			console.error("Error:", error);
			showError("An unexpected error occurred");
		}
	});
</script>
