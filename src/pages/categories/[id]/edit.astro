---
import BaseLayout from "../../../layouts/app.layout.astro";
import { db, eq, Category } from "astro:db";

const { id } = Astro.params;

if (!id) {
	return Astro.redirect("/categories");
}

const options = await db.select().from(Category).all();

const category = await db
	.select()
	.from(Category)
	.where(eq(Category.id, parseInt(id)));

if (!category) {
	return Astro.redirect("/categories");
}
---

<BaseLayout title={`${category[0]?.name} | Edit | Category`}>
	<div class="p-6 mx-auto">
		<h1 class="text-2xl font-bold mb-6">
			Editando Categoría "{category[0]?.name}"
		</h1>

		<form
			id="createForm"
			class="max-w-lg bg-gray-50/50 dark:bg-gray-700/50 rounded-lg shadow p-6"
		>
			<div class="mb-4">
				<label
					for="name"
					class="block text-sm font-medium text-primary-100 dark:text-primary-900 mb-2"
					>Nombre</label
				>
				<input
					type="text"
					name="name"
					id="name"
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="Nombre de la Categoría"
					required=""
					value={category[0]?.name}
				/>
				<input type="hidden" name="id" value={id} />
			</div>
			<div class="mb-4">
				<label
					for="description"
					class="block text-sm font-medium text-primary-100 dark:text-primary-900 mb-2"
					>Description</label
				>
				<textarea
					id="description"
					name="description"
					rows="3"
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="Category Description"
				>
					{category[0]?.description}
				</textarea>
			</div>
			<div class="mb-4">
				<label
					for="parents"
					class="block text-sm font-medium text-primary-100 dark:text-primary-900 mb-2"
					>Categoria(s) Superior(es)</label
				>
				<select
					id="parents"
					name="parents"
					multiple
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
				>
					{
						// selected each option in category.parents array

						options.map((option) => (
							<option
								value={option.id}
								selected={category[0]?.parents.includes(
									option.id,
								)}
							>
								{option.name}
							</option>
						))
					}
				</select>
				<p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
					Sosten Ctrl/Cmd para seleccionar varios nombres
				</p>
			</div>

			<div class="mb-4">
				<label class="relative inline-flex items-center cursor-pointer">
					<input
						type="checkbox"
						id="active"
						name="active"
						class="sr-only peer"
						checked
					/>
					<div
						class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:peer-focus:ring-primary-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary-600"
					>
					</div>
					<span
						class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300"
						>Active</span
					>
				</label>
			</div>

			<div class="flex justify-end space-x-4">
				<a
					href="/categories"
					class="px-4 py-2 text-gray-100 bg-danger-400 rounded-md hover:bg-danger-500"
				>
					Cancel
				</a>
				<button
					type="submit"
					class="px-4 py-2 text-gray-100 bg-primary-600 rounded-md hover:bg-primary-700"
				>
					Guardar
				</button>
			</div>
		</form>
	</div>
</BaseLayout>

<script>
	const form = document.getElementById("createForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);

		try {
			console.log(formData.get("active"));
			let id = formData.get("id");
			const response = await fetch("/api/categories/" + id, {
				method: "PUT",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					name: formData.get("name"),
					slug: formData.get("slug"),
					description: formData.get("description"),
					parent_id: formData.get("parent_id"),
					common_names: JSON.parse(formData.get("common_names")),
					active: formData.get("active"),
				}),
			});

			if (response.ok) {
				window.location.href = "/categories";
			}
		} catch (error) {
			console.error("Error:", error);
		}
	});
</script>
