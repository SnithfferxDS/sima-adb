---
import Layout from "../../../layouts/app.layout.astro";
import MetadataForm from "../../../components/metadata/MetadataForm.astro";
import BreadCrumbs from "../../../components/BreadCrumbs.astro";
import { db, eq } from "astro:db";
import {
	Metadata,
	MetadataRelations,
	Group,
	Category,
	CommonName,
	ProductType,
} from "astro:db";

const { id } = Astro.params;

// Fetch metadata and its relations
const metadata = await db
	.select()
	.from(Metadata)
	.where(eq(Metadata.id, parseInt(id!)))
	.get();
const relations = await db
	.select()
	.from(MetadataRelations)
	.where(eq(MetadataRelations.metadata_id, parseInt(id!)));

if (!metadata) {
	return Astro.redirect("/metadata");
}

// Fetch related data
const [groups, categories, commonNames, productTypes] = await Promise.all([
	db.select().from(Group).orderBy(Group.name),
	db
		.select()
		.from(Category)
		.where(eq(Category.active, true))
		.orderBy(Category.name),
	db.select().from(CommonName).orderBy(CommonName.name),
	db.select().from(ProductType).orderBy(ProductType.name),
]);

// Organize selected relations
const selectedRelations = {
	categories: relations.map((r) => JSON.parse(r.categories as string))[0],
	commonNames: relations.map((r) => JSON.parse(r.common_names as string))[0],
	productTypes: relations.map((r) =>
		JSON.parse(r.product_types as string),
	)[0],
};

const breadcrumbs = [
	{
		lable: "Metadata",
		path: "/metadata",
	},
	{
		lable: "EdiciÃ³n",
		path: `/metadata/${metadata.name}/edit`,
	},
];
---

<Layout title="Edit Metadata">
	<div
		class="shadow-md rounded-lg overflow-hidden transition-shadow hover:shadow-lg"
	>
		<div
			class="p-4 block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5"
		>
			<div class="w-full mb-1">
				<BreadCrumbs
					routes={breadcrumbs}
					currentRoute={Astro.url.pathname}
					headerTitle="Metadatos"
				/>
			</div>
		</div>
		<div class="flex flex-col">
			<div class="overflow-x-auto">
				<div class="p-6 mx-auto align-middle">
					<MetadataForm
						metadata={metadata}
						groups={groups}
						categories={categories}
						commonNames={commonNames}
						productTypes={productTypes}
						selectedRelations={selectedRelations}
						action={`metadata/${id}`}
						submitText="Update"
					/>
				</div>
			</div>
		</div>
	</div></Layout
>
