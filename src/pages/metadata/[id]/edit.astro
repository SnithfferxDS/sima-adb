---
import Layout from "../../../layouts/app.layout.astro";
import MetadataForm from "../../../components/metadata/MetadataForm.astro";
import {
	db,
	Metadata,
	MetadataRelations,
	Group,
	Category,
	CommonName,
	ProductType,
	eq,
} from "astro:db";

const { id } = Astro.params;

// Fetch metadata and its relations
const metadata = await db
	.select()
	.from(Metadata)
	.where(eq(Metadata.id, parseInt(id!)))
	.get();
const relations = await db
	.select()
	.from(MetadataRelations)
	.where(eq(MetadataRelations.metadata_id, parseInt(id!)));

if (!metadata) {
	return Astro.redirect("/metadata");
}

// Fetch related data
const [groups, categories, commonNames, productTypes] = await Promise.all([
	db.select().from(Group).orderBy(Group.name),
	db
		.select()
		.from(Category)
		.where(eq(Category.active, true))
		.orderBy(Category.name),
	db.select().from(CommonName).orderBy(CommonName.name),
	db.select().from(ProductType).orderBy(ProductType.name),
]);

// Organize selected relations
const selectedRelations = {
	categories: relations.map((r) => r.category).filter(Boolean),
	commonNames: relations.map((r) => r.common_name).filter(Boolean),
	productTypes: relations.map((r) => r.product_type).filter(Boolean),
};
---

<Layout title="Edit Metadata">
	<div
		class="bg-white shadow-md rounded-lg overflow-hidden max-w-4xl mx-auto transition-shadow hover:shadow-lg"
	>
		<div class="p-4 border-b">
			<h1 class="text-2xl font-bold text-gray-800">Edit Metadata</h1>
		</div>

		<MetadataForm
			metadata={metadata}
			groups={groups}
			categories={categories}
			commonNames={commonNames}
			productTypes={productTypes}
			selectedRelations={selectedRelations}
			action={`/metadata/${id}/update`}
			submitText="Update"
		/>
	</div>
</Layout>
