---
import Layout from "../../../layouts/app.layout.astro";
import { db, Supplier, eq } from "astro:db";

const { id } = Astro.params;
const supplierId = parseInt(id!);

const supplier = await db
	.select()
	.from(Supplier)
	.where(eq(Supplier.id, supplierId))
	.get();

if (!supplier) {
	return Astro.redirect("/suppliers");
}
---

<Layout title="Edit Supplier">
	<div class="p-6 mx-auto">
		<h1 class="text-2xl font-bold mb-6">Edit Supplier</h1>

		<form
			id="editForm"
			class="max-w-lg bg-gray-50/50 dark:bg-gray-700/50 rounded-lg shadow p-6"
		>
			<input type="hidden" name="id" value={supplier.id} />

			<div class="mb-4">
				<label
					for="name"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Name</label
				>
				<input
					type="text"
					name="name"
					id="name"
					value={supplier.name}
					required
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="Supplier Name"
				/>
			</div>

			<div class="grid grid-cols-2 gap-4">
				<div class="mb-4">
					<label
						for="email"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Email</label
					>
					<input
						type="email"
						name="email"
						id="email"
						value={supplier.email}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="supplier@example.com"
					/>
				</div>

				<div class="mb-4">
					<label
						for="phone"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Phone</label
					>
					<input
						type="tel"
						name="phone"
						id="phone"
						value={supplier.phone}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="+1234567890"
					/>
				</div>
			</div>

			<div class="mb-4">
				<label
					for="website"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Website</label
				>
				<input
					type="url"
					name="website"
					id="website"
					value={supplier.website}
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="https://example.com"
				/>
			</div>

			<div class="mb-4">
				<label
					for="contact"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Contact Person</label
				>
				<input
					type="text"
					name="contact"
					id="contact"
					value={supplier.contact}
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="John Doe"
				/>
			</div>

			<div class="grid grid-cols-2 gap-4">
				<div class="mb-4">
					<label
						for="country"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Country</label
					>
					<input
						type="text"
						name="country"
						id="country"
						value={supplier.country}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="Country"
					/>
				</div>

				<div class="mb-4">
					<label
						for="state"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>State</label
					>
					<input
						type="text"
						name="state"
						id="state"
						value={supplier.state}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="State"
					/>
				</div>
			</div>

			<div class="grid grid-cols-2 gap-4">
				<div class="mb-4">
					<label
						for="city"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>City</label
					>
					<input
						type="text"
						name="city"
						id="city"
						value={supplier.city}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="City"
					/>
				</div>

				<div class="mb-4">
					<label
						for="street"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Street</label
					>
					<input
						type="text"
						name="street"
						id="street"
						value={supplier.street}
						class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
						placeholder="Street"
					/>
				</div>
			</div>

			<div class="mb-4">
				<label
					for="logo"
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
					>Logo URL</label
				>
				<input
					type="url"
					name="logo"
					id="logo"
					value={supplier.logo}
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
					placeholder="https://example.com/logo.png"
				/>
			</div>

			<div class="flex justify-end space-x-4">
				<a
					href="/suppliers"
					class="px-4 py-2 text-gray-200 bg-danger-400 rounded-md hover:bg-danger-500"
				>
					Cancel
				</a>
				<button
					type="submit"
					class="px-4 py-2 text-white bg-primary-500 rounded-md hover:bg-primary-600"
				>
					Save Changes
				</button>
			</div>
		</form>
	</div>
</Layout>

<script>
	import { showSuccess, showError } from "../../../lib/utils/notifications";

	const form = document.getElementById("editForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);

		const data = {
			name: formData.get("name"),
			email: formData.get("email"),
			phone: formData.get("phone"),
			website: formData.get("website"),
			contact: formData.get("contact"),
			country: formData.get("country"),
			state: formData.get("state"),
			city: formData.get("city"),
			street: formData.get("street"),
			logo: formData.get("logo"),
		};

		try {
			const response = await fetch(
				`/api/suppliers/${formData.get("id")}`,
				{
					method: "PUT",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify(data),
				},
			);

			if (response.ok) {
				showSuccess("Supplier updated successfully");
				window.location.href = "/suppliers";
			} else {
				const error = await response.json();
				showError(error.message || "Failed to update supplier");
			}
		} catch (error) {
			console.error("Error:", error);
			showError("An unexpected error occurred");
		}
	});
</script>
