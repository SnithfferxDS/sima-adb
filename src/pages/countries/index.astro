---
import Layout from "../../layouts/app.layout.astro";
import BreadCrumbs from "../../components/BreadCrumbs.astro";
import Search from "../../components/Search.astro";
import AstroTable from "../../components/Table.astro";
import { db, Country } from "astro:db";

const countries = await db.select().from(Country).all();

const breadcrumbs = [
	{
		lable: "Paieses",
		path: "/countries",
	},
];
---

<Layout title="Countries">
	<div
		class="shadow-md rounded-lg overflow-hidden transition-shadow hover:shadow-lg"
	>
		<div
			class="p-4 block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5"
		>
			<div class="w-full mb-1">
				<BreadCrumbs
					routes={breadcrumbs}
					currentRoute={Astro.url.pathname}
					headerTitle="Paises"
				/>
				<div class="items-center justify-between flex">
					<div class="flex items-center mb-4 sm:mb-0">
						<Search
							action="search"
							id="countriesearch"
							placeholder="en paises"
							method="get"
						/>
					</div>

					<div
						class="flex items-center mb-4 sm:mb-0 ml-auto space-x-1 sm:space-x-2"
					>
						<button
							type="button"
							data-refresh
							class="inline-flex
							items-center
							justify-center
							w-1/2
							px-3
							py-2
							text-sm
							font-medium
							text-center
							rounded-lg
							focus:ring-4
							sm:w-auto
							text-white
							bg-purple-700
							hover:bg-purple-800
							focus:ring-purple-300
							dark:bg-purple-600
							dark:hover:bg-purple-700
							dark:focus:ring-purple-800"
						>
							<svg
								class="w-5 h-5 sm:mr-2 sm:-ml-1"
								fill="none"
								stroke="currentColor"
								stroke-width="1.5"
								viewBox="0 0 24 24"
								xmlns="http://www.w3.org/2000/svg"
								aria-hidden="true"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
								></path>
							</svg>
							<span class="hidden md:block">Recargar</span>
						</button>
						<button
							id="createResourceButton"
							class="inline-flex
							items-center
							justify-center
							w-1/2
							px-3
							py-2
							text-sm
							font-medium
							text-center
							rounded-lg
							focus:ring-4
							sm:w-auto
							text-white
							bg-purple-700
							hover:bg-purple-800
							focus:ring-purple-300
							dark:bg-purple-600
							dark:hover:bg-purple-700
							dark:focus:ring-purple-800"
							type="button"
							data-drawer-target="drawer-create-default"
							data-drawer-show="drawer-create-default"
							aria-controls="drawer-create-default"
							data-drawer-placement="right"
						>
							<svg
								class="w-5 h-5 sm:mr-2 sm:-ml-1"
								fill="currentColor"
								viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
								><path
									fill-rule="evenodd"
									d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
									clip-rule="evenodd"></path></svg
							>
							<span class="hidden md:block">Agregar</span>
						</button>
					</div>
				</div>
			</div>
		</div>
		<div class="flex flex-col">
			<div class="overflow-x-auto">
				<div class="inline-block min-w-full align-middle">
					<AstroTable
						data={countries}
						columns={[
							{ name: "id", label: "Id" },
							{ name: "name", label: "Nombre" },
							{ name: "tlc", label: "TLC" },
							{ name: "impex", label: "IMPEX" },
							{ name: "additional", label: "Adicional" },
						]}
						resource="countries"
					/>
				</div>
			</div>
		</div>
	</div>
	<!-- Create New -->
	<div
		id="drawer-create-default"
		class="fixed
		top-0
		right-0
		z-40
		w-full
		h-screen
		max-w-xs
		p-6
		overflow-y-auto
		transition-transform
		translate-x-full
		rounded-l-md
		bg-primary-800/50
		dark:bg-primary-700/50
		shadow-purple-500/50"
		tabindex="-1"
		aria-labelledby="drawer-label"
		aria-hidden="true"
	>
		<h5
			id="drawer-label"
			class="inline-flex items-center mb-6 text-sm font-semibold text-gray-500 uppercase dark:text-gray-400"
		>
			Nuevo País
		</h5>
		<button
			type="button"
			data-drawer-dismiss="drawer-create-default"
			aria-controls="drawer-create-default"
			class="text-gray-400 bg-transparent hover:bg-danger-200 hover:text-danger-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center dark:hover:bg-danger-600 dark:hover:text-white"
		>
			<svg
				aria-hidden="true"
				class="w-5 h-5"
				fill="currentColor"
				viewBox="0 0 20 20"
				xmlns="http://www.w3.org/2000/svg"
				><path
					fill-rule="evenodd"
					d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
					clip-rule="evenodd"></path></svg
			>
			<span class="sr-only">Close menu</span>
		</button>
		<form id="createForm">
			<div class="space-y-4">
				<div>
					<label
						for="country_name"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Nombre</label
					>
					<input
						type="text"
						name="country_name"
						id="country_name"
						class="border
						text-sm
						rounded-lg
						block
						w-full p-2.5
						bg-gray-50
						border-gray-300
						text-gray-900
						focus:ring-primary-600
						focus:border-primary-600
						dark:bg-gray-700
						dark:border-gray-600
						dark:placeholder-gray-400
						dark:text-white"
						placeholder="Digite el nombre de país"
						required=""
					/>
				</div>

				<div>
					<label
						for="country_tlc"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>TLC</label
					>
					<input
						type="number"
						name="country_tlc"
						id="country_tlc"
						class="border
						text-sm
						rounded-lg
						block
						w-full p-2.5
						bg-gray-50
						border-gray-300
						text-gray-900
						focus:ring-primary-600
						focus:border-primary-600
						dark:bg-gray-700
						dark:border-gray-600
						dark:placeholder-gray-400
						dark:text-white"
						placeholder="Digite el nombre de país"
						required=""
						min="0"
						step="any"
						value="0"
					/>
				</div>

				<div>
					<label
						for="country_impex"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>IMPEX</label
					>
					<input
						type="number"
						name="country_impex"
						id="country_impex"
						class="border
						text-sm
						rounded-lg
						block
						w-full p-2.5
						bg-gray-50
						border-gray-300
						text-gray-900
						focus:ring-primary-600
						focus:border-primary-600
						dark:bg-gray-700
						dark:border-gray-600
						dark:placeholder-gray-400
						dark:text-white"
						placeholder="Coloque el TLC del país"
						required=""
						min="0"
						step="any"
						value="0"
					/>
				</div>

				<div>
					<label
						for="country_additional"
						class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
						>Adicional</label
					>
					<input
						type="number"
						name="country_additional"
						id="country_additional"
						class="border
						text-sm
						rounded-lg
						block
						w-full p-2.5
						bg-gray-50
						border-gray-300
						text-gray-900
						focus:ring-primary-600
						focus:border-primary-600
						dark:bg-gray-700
						dark:border-gray-600
						dark:placeholder-gray-400
						dark:text-white"
						placeholder="Coloque el TLC del país"
						required=""
						min="0"
						step="any"
						value="0"
					/>
				</div>

				<div
					class="bottom-0 left-0 flex justify-center w-full pb-4 space-x-4 md:px-4 md:absolute"
				>
					<button
						type="submit"
						class="text-white w-full justify-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-700 dark:hover:bg-primary-600 dark:focus:ring-primary-600"
					>
						Agregar
					</button>
					<button
						type="button"
						data-drawer-dismiss="drawer-create-default"
						aria-controls="drawer-create-default"
						class="inline-flex w-full justify-center text-gray-500 items-center bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600"
					>
						<svg
							aria-hidden="true"
							class="w-5 h-5 -ml-1 sm:mr-1"
							fill="none"
							stroke="currentColor"
							viewBox="0 0 24 24"
							xmlns="http://www.w3.org/2000/svg"
							><path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M6 18L18 6M6 6l12 12"></path></svg
						>
						Cancelar
					</button>
				</div>
			</div>
		</form>
	</div>
</Layout>

<script>
	import { showSuccess, showError } from "../../lib/utils/notifications";
	import { validateCountry } from "../../lib/utils/validation";

	const form = document.getElementById("createForm");
	form?.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(form as HTMLFormElement);

		const data = {
			name: formData.get("country_name") as string,
			tlc: parseFloat(formData.get("country_tlc") as string),
			impex: parseFloat(formData.get("country_impex") as string),
			additional: parseFloat(
				formData.get("country_additional") as string,
			),
		};
		const validation = validateCountry(data);
		if (validation.errors) {
			showError(Object.values(validation.errors).flat().join("\n"));
			return;
		}

		try {
			const response = await fetch("/api/countries", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify(data),
			});

			if (response.ok) {
				showSuccess("Product Type created successfully");
				window.location.href = "/countries";
			} else {
				const error = await response.json();
				showError(error.message || "Failed to create product type");
			}
		} catch (error) {
			console.error("Error:", error);
			showError("An unexpected error occurred");
		}
	});
</script>
